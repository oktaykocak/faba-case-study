version: '3.8'

services:
  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: ecommerce-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: oktay
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ecommerce-network
    # healthcheck:
    #   test: ["CMD", "rabbitmq-diagnostics", "ping"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  # PostgreSQL Database for Order Service
  postgres-order:
    image: postgres:15
    container_name: ecommerce-postgres-order
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_order_data:/var/lib/postgresql/data
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PostgreSQL Database for Inventory Service
  postgres-inventory:
    image: postgres:15
    container_name: ecommerce-postgres-inventory
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: inventory_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_inventory_data:/var/lib/postgresql/data
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PostgreSQL Database for Notification Service
  postgres-notification:
    image: postgres:15
    container_name: ecommerce-postgres-notification
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: notification_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_notification_data:/var/lib/postgresql/data
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Order Service
  order-service:
    build:
      context: .
      dockerfile: ./services/order-service/Dockerfile
    container_name: ecommerce-order-service
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres-order
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: order_db
      RABBITMQ_URL: amqp://oktay:password@rabbitmq:5672
    depends_on:
      - postgres-order
      - rabbitmq
      - notification-service
      - inventory-service
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped

  # Inventory Service
  inventory-service:
    build:
      context: .
      dockerfile: ./services/inventory-service/Dockerfile
    container_name: ecommerce-inventory-service
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      PORT: 3002
      DB_HOST: postgres-inventory
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: inventory_db
      RABBITMQ_URL: amqp://oktay:password@rabbitmq:5672
    depends_on:
      - postgres-inventory
      - rabbitmq
      - notification-service
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: ./services/notification-service/Dockerfile
    container_name: ecommerce-notification-service
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: development
      PORT: 3003
      DB_HOST: postgres-notification
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: notification_db
      RABBITMQ_URL: amqp://oktay:password@rabbitmq:5672
    depends_on:
      - postgres-notification
      - rabbitmq
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped

volumes:
  rabbitmq_data:
  postgres_order_data:
  postgres_inventory_data:
  postgres_notification_data:

networks:
  ecommerce-network:
    driver: bridge